name: "Find Domain"

on:
  workflow_dispatch:
    inputs:
      domain:
        description: "查询单个域名"
        required: false
        default: ""
      domain_url:
        description: "域名模块信息(JSON) URL"
        required: false
        default: ""
      start_char:
        description: "起始域名"
        required: false
        default: ""

jobs:
  find_domain:
    runs-on: ubuntu-latest
    environment: production 
    env:
      FD_CONFIG_JSON: ${{ secrets.CONFIG_JSON }}
      FD_DOMAIN_URL: ${{ secrets.DOMAIN_URL }}
      FD_DOMAIN: ${{ secrets.DOMAIN }}
      FD_SERVER_URL: ${{ secrets.SERVER_URL }}
      FD_SERVER_AUTH: ${{ secrets.SERVER_AUTH }}
      FD_DNP: ${{ secrets.DNP }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Setup Python
        run: uv python install

      - name: Set dynamic env vars
        env:
          DOMAIN_INPUT: ${{ github.event.inputs.domain }}
          DOMAIN_URL_INPUT: ${{ github.event.inputs.domain_url }}
          START_CHAR_INPUT: ${{ github.event.inputs.start_char }}
        run: |
          echo "DOMAIN_INPUT: $DOMAIN_INPUT"
          if [ -n "$DOMAIN_INPUT" ]; then
            echo "DOMAIN_INPUT=$DOMAIN_INPUT"
            echo "FD_DOMAIN=$DOMAIN_INPUT" >> $GITHUB_ENV
          fi

          if [ -n "$DOMAIN_URL_INPUT" ]; then
            echo "DOMAIN_URL_INPUT: $DOMAIN_URL_INPUT"
            echo "FD_DOMAIN_URL=$DOMAIN_URL_INPUT" >> $GITHUB_ENV
          fi

          if [ -n "$START_CHAR_INPUT" ]; then
            echo "START_CHAR_INPUT: $START_CHAR_INPUT"
            echo "FD_START_CHAR=$START_CHAR_INPUT" >> $GITHUB_ENV
          fi

      - name: Run FindDomain
        run: |
          uv sync
          uv run findomain

      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: find-domain-logs
          path: logs/
          retention-days: 3
